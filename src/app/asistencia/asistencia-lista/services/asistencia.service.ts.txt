import { inject, Injectable } from '@angular/core';
import { HttpClient } from '@angular/common/http';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

export interface PreAsistencia {
  id_sesion: string;
  id_sede?: string;
  numero_asistentes?: number;
  foto?: string;
  descripcion?: string;
  imagen?: string;
  sedes: { id_sede: string; nombre: string }[];
  beneficiarios: { id_persona: string; nombre_completo: string; id_sede: string }[];
  asistentes_sesiones: { id_persona: string; eliminar?: 'S' | 'N' }[];
}

export interface AsistenciaInput {
  id_actividad: string;
  id_sesion: string;
  imagen: string;
  numero_asistentes: number;
  descripcion: string;
  nuevos: { id_persona: string; id_sesion: string; id_asistencia: string }[];
}

export interface AsistenciaResponse {
  exitoso: string;
  mensaje: string;
}

@Injectable({ providedIn: 'root' })
export class AsistenciaService {
  private apiUrl = 'http://localhost:4000/graphql'; // ðŸ‘ˆ Ajusta a tu backend real
  private readonly UPDATE_ASISTENCIAS = `
mutation UpdateAsistencias($input: UpdateAsistenciaInput!) {
  updateAsistencias(input: $input) {
    exitoso
    mensaje
  }
}
`;
  private readonly GET_PRE_ASISTENCIA = `
  query GetPreAsistencia($id_sesion: ID!) {
    getPreAsistencia(id_sesion: $id_sesion) {
      id_sesion
      id_sede
      numero_asistentes
      foto
      descripcion
      imagen

      sedes {
        id_sede
        nombre
      }

      beneficiarios {
        id_persona
        nombre_completo
        id_sede
      }

      asistentes_sesiones {
        id_persona
        eliminar
      }
    }
  }
`;
private readonly ACTUALIZAR_SESION = `
mutation updateAsistencias($input: UpdateSesionInput!) {
  updateAsistencias(input: $input) {
    exitoso
    mensaje
  }
}
`;
  // âœ… Reemplazo constructor por inject()
  private http = inject(HttpClient);


  // ðŸ”¹ Consultar info de asistencia segÃºn id_actividad
  obtenerDetalleAsistencia(id_sesion: string): Observable<PreAsistencia> {
    return this.http.post<{ data: { getPreAsistencia: PreAsistencia } }>(this.apiUrl, {
      query: this.GET_PRE_ASISTENCIA,
      variables: { id_sesion }
    }).pipe(
      map(res => res.data.getPreAsistencia)
    );
  }

  // ðŸ”¹ Guardar asistencia (unificado)
  guardarAsistencia(input: AsistenciaInput): Observable<AsistenciaResponse> {
    return this.http.post<{ data: { updateAsistencias: AsistenciaResponse } }>(this.apiUrl, {
      query: this.UPDATE_ASISTENCIAS,
      variables: { input }
    }).pipe(
      map(res => res.data.updateAsistencias)
    );
  }

  // ðŸ”¹ Guardar asistencia fotogrÃ¡fica
  guardarAsistenciaFotografica(input: AsistenciaInput):  Observable<{ exitoso: string; mensaje: string }>  {

    //console.log('ðŸ“¤ Enviando asistencia EN EL SERVICES:', input);


    return this.http.post<{ data: { updateAsistencias: AsistenciaResponse } }>(this.apiUrl, {
      query: this.UPDATE_ASISTENCIAS,
      variables: { input }
    }).pipe(
      map(res => res.data.updateAsistencias)
    );
  }


}
